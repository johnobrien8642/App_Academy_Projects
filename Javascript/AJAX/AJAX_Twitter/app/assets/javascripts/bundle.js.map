{"version":3,"sources":["./frontend/api_util.js","./frontend/follow_toggle.js","./frontend/infinite_tweets.js","./frontend/tweet_compose.js","./frontend/users_search.js","webpack/bootstrap","./frontend/twitter.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;AAEA;;AAEA;AACA;AACA,qBAAqB,GAAG;AACxB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,yB;;;;;;;;;;ACzCA,gBAAgB,mBAAO,CAAC,6CAAe;;AAEvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,K;AACA;;;AAGA;;AAEA,8B;;;;;;;;;;ACxEA,gBAAgB,mBAAO,CAAC,6CAAe;;AAEvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,cAAc,KAAK,sBAAsB;AACnE;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,cAAc;AACxC,aAAa;AACb;AACA;;AAEA,WAAW,cAAc;;AAEzB;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gC;;;;;;;;;;AChGA,gBAAgB,mBAAO,CAAC,6CAAe;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,QAAQ,IAAI,cAAc;AACtD;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,8B;;;;;;;;;;AC7EA,gBAAgB,mBAAO,CAAC,0CAAY;AACpC,qBAAqB,mBAAO,CAAC,oDAAiB;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;;AAEA;;AAEA;AACA,yBAAyB,cAAc;AACvC,uCAAuC,QAAQ;;AAE/C;AACA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6B;;;;;;UCjDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;ACrBA,qBAAqB,mBAAO,CAAC,uDAAoB;AACjD,qBAAqB,mBAAO,CAAC,uDAAoB;AACjD,uBAAuB,mBAAO,CAAC,2DAAsB;AACrD,oBAAoB,mBAAO,CAAC,qDAAmB;;AAE/C;AACA,mDAAmD,4BAA4B;AAC/E,kDAAkD,yBAAyB;AAC3E,mDAAmD,0BAA0B;AAC7E,mDAAmD,wBAAwB;AAC3E,CAAC,E","file":"bundle.js","sourcesContent":["const APIUtil = {\n  followUser: id => APIUtil.ChangeMyFollowStatus(id, \"POST\"),\n\n  unfollowUser: id => APIUtil.ChangeMyFollowStatus(id, \"DELETE\"),\n\n  ChangeMyFollowStatus: (id, method) => (\n    $.ajax({\n      url: `/users/${id}/follow`,\n      dataType: \"json\",\n      method\n    })\n  ),\n  \n  searchUsers: query => (\n    $.ajax({\n      url: `/users/search`,\n      dataType: 'json',\n      method: 'GET',\n      data: { query }\n    })\n  ),\n\n  createTweet: data => (\n    $.ajax({\n      url: `/tweets`,\n      method: 'POST',\n      dataType: 'json',\n      data\n    })\n  ),\n\n  fetchTweets: data => (\n    $.ajax({\n      url: '/feed',\n      method: 'GET',\n      dataType: 'json',\n      data\n    })\n  )\n}\n\nmodule.exports = APIUtil;","const APIUtil = require('./api_util.js')\n\nclass FollowToggle {\n  constructor (el, options) {\n    this.$el = $(el);\n    this.userId = (this.$el.data('user-id') || options.userId);\n    this.followState = (this.$el.data('initial-follow-state') ||\n                          options.followState);\n                          \n    this.render();\n    this.$el.on('click', this.handleClick.bind(this));\n  }\n\n  render() {\n    if (this.followState === 'followed') {\n      this.$el.prop('disabled', false)\n      this.$el.text('Unfollow')\n    } else if (this.followState === 'unfollowed') {\n      this.$el.prop('disabled', false)\n      this.$el.text('Follow')\n    } else if (this.followState === 'following') {\n      this.$el.prop('disabled', true)\n      this.$el.text('Following...')\n    } else if (this.followState === 'unfollowing') {\n      this.$el.prop('disabled', true)\n      this.$el.text('Unfollowing...')\n    }\n  }\n\n  handleClick (event) {\n    const followButton = this\n    \n    event.preventDefault;\n      \n    if (this.followState === 'followed') {\n      followButton.followState = 'unfollowing'\n      followButton.render();\n      APIUtil.unfollowUser(this.userId).then(function () {\n        followButton.followState = 'unfollowed';\n        followButton.render();\n      })\n      // $.ajax({\n      //   url: '/users/' + this.userId + '/follow',\n      //   method: 'DELETE',\n      //   dataType: \"json\",\n      //   success: function () {\n      //     followButton.followState = 'unfollowed'\n      //     followButton.render();\n      //   }\n      // })\n    } else if (this.followState === 'unfollowed') {\n      followButton.followState = 'following'\n      followButton.render();\n      APIUtil.followUser(this.userId).then(function () {\n        followButton.followState = 'followed';\n        followButton.render();\n      })\n      // $.ajax({\n      //   url: '/users/' + this.userId + '/follow',\n      //   method: 'POST',\n      //   dataType: \"json\",\n      //   success: function() {\n      //     followButton.followState = 'followed'\n      //     followButton.render();\n      //   }\n      // })\n    } \n  }\n\n  \n}\n\nmodule.exports = FollowToggle;","const APIUtil = require('./api_util.js') \n\nclass InfiniteTweets {\n  constructor (el) {\n    this.$el = $(el);\n    this.lastCreatedAt = null;\n\n    $(document).ready(this.initializeTweets.bind(this));\n    this.$el.on('click', '.fetch-more', this.fetchTweets.bind(this));\n    this.$el.on('insert-tweet', this.insertTweet.bind(this));\n  }\n\n  initializeTweets () {\n    const infiniteTweets = this;\n    const data = {};\n    \n    APIUtil.fetchTweets(data).then((data) => {\n      if (data.length > 0) {\n        infiniteTweets.insertTweets(data);\n        infiniteTweets.lastCreatedAt = data[data.length - 1].created_at;\n      } else {\n        const $msg = $('<div>').text('No tweets yet, follow someone!')\n        this.$el.find('ul.tweets').append($msg)\n      }\n    })\n  }\n\n  fetchTweets (event) {\n    event.preventDefault();\n\n    const infiniteTweets = this;\n    const data = {};\n\n    if (this.lastCreatedAt) data.max_created_at = this.lastCreatedAt;\n \n    APIUtil.fetchTweets(data).then((data) =>{\n      infiniteTweets.insertTweets(data);\n\n      if (data.length < 20) {\n        infiniteTweets.$el\n          .find('.fetch-more')\n          .replaceWith('<b>No more tweets!</b>');\n      }\n\n      if (data.length > 0) {\n        infiniteTweets.lastCreatedAt = data[data.length - 1].created_at;\n      }\n\n      this.clearInput();\n    })\n  }\n\n  clearInput() {\n    this.$el.find('textarea').empty();\n    this.$el.find(':input').prop('disabled', false)\n  }\n\n  insertTweets(data) {\n    this.$el.find('ul.tweets').append(data.map(this.tweetElement));\n  }\n\n  insertTweet(event, data) {\n    this.$el.find('ul.tweets').prepend(this.tweetElement(data))\n    \n    if(!this.lastCreatedAt) {\n      this.lastCreatedAt = data.created_at\n    }\n  }\n\n  tweetElement(tweet) {\n    const mentions = tweet.mentions.map(mention =>\n      `<li>\n        <a href='/users/${tweet.user.id}'>@${mention.user.username}</a>\n      </li>`)\n      .join('');\n\n    const elementString = `\n    <li>\n      <h3>\n        <a href='/users/${tweet.user.id}'>\n          @${tweet.user.username}\n        </a>\n      </h3>\n      \n      <p>${tweet.content}</p>\n      \n      <ul>Mentions\n        ${mentions}\n      </ul>\n    </li>\n    `\n    return $(elementString);\n  }\n\n}\n\nmodule.exports = InfiniteTweets;","const APIUtil = require('./api_util.js')\n\nclass TweetCompose {\n  constructor (el) {\n    this.$el = $(el);\n    this.$mentionedUsersUl = this.$el.find('.mentioned-users');\n    this.$el.on('submit', this.submit.bind(this))\n    this.$el.on('input', this.charCount.bind(this))\n    this.$el.find('.add-mentioned-user').on(\n      'click', this.addMentionedUser.bind(this));\n    this.$mentionedUsersUl.on(\n      'click', '.remove-mentioned-user', this.removeMentionedUser.bind(this));\n  }\n\n  submit (event) {\n    event.preventDefault();\n    \n    const data = this.$el.serializeJSON();\n\n    this.$el.find(':input').prop('disabled', true);\n\n    APIUtil.createTweet(data).then(tweet => this.handleSuccess(tweet))\n  }\n\n  addMentionedUser (event) {\n    event.preventDefault();\n\n    this.$mentionedUsersUl.append(this.newUserSelect());\n  }\n\n  removeMentionedUser (event) {\n    event.preventDefault();\n\n    $(event.currentTarget).parent().remove();\n  }\n \n  handleSuccess (tweet) {\n    const $tweetsUl = $(this.$el.data('tweets-ul'));\n    $tweetsUl.trigger('insert-tweet', tweet);\n\n    this.clearInput();\n  }\n\n  clearInput () {\n    this.$el.find('textarea').empty();\n    this.$el.find(':input').prop('disabled', false)\n    this.$el.find('.mentioned-users').empty();\n  }\n\n  charCount () {\n    const length = this.$el.find('textarea').val().replace(/ /g, '').length\n    const charsLeft = 140 - length\n    const strongTag = this.$el.find('.chars-left')\n    strongTag.empty();\n    strongTag.append('Characters left: ')\n    strongTag.append(charsLeft)\n  }\n\n  newUserSelect () {\n    const userOptions = window.users\n      .map(user =>\n          `<option value='${user.id}'>${user.username}</option>`)\n      .join('')\n\n    const html = `\n      <div>\n        <select name='tweet[mentioned_user_ids][]'>\n          ${userOptions}\n        </select>\n        \n        <button class='remove-mentioned-user'>Remove</button>\n      </div>`\n\n    return $(html);\n  }\n}\n\nmodule.exports = TweetCompose;","const APIUtil = require(\"./api_util\");\nconst FollowToggle = require(\"./follow_toggle\");\n\nclass UsersSearch {\n  constructor (el) {\n    this.$el = $(el);\n    this.$input = this.$el.find('input[name=username]');\n    this.$ul = this.$el.find('.users')\n\n    this.$el.on('input', this.handleInput.bind(this));\n  }\n\n  handleInput () {\n    if (this.$input.val() === '') {\n      this.renderResults([]);\n      return;\n    }\n\n    APIUtil.searchUsers(this.$input.val())\n      .then(users => this.renderResults(users));\n  }\n\n  renderResults (users) {\n    for (let i = 0; i < users.length; i++) {\n      const user = users[i]\n      \n      this.$ul.empty();\n\n      const $userLink = $('<a>');\n      $userLink.text(`@${user.username}`);\n      $userLink.attr('href', `/users/${user.id}`);\n\n      const $followButton = $('<button></button>')\n      new FollowToggle($followButton, {\n        userId: user.id,\n        followState: user.followed ? 'followed' : 'unfollowed'\n      });\n\n      $userLink.append($followButton)\n\n      const $li = $('<li>');\n      $li.append($userLink);\n      $li.append($followButton)\n\n      this.$ul.append($li);\n    }\n  }\n}\n\nmodule.exports = UsersSearch;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require('./follow_toggle.js');\nconst TweetCompose = require('./tweet_compose.js')\nconst InfiniteTweets = require('./infinite_tweets.js')\nconst UsersSearch = require('./users_search.js')\n\n$(function () {\n  $('div.infinite-tweets').each(function(i, fetch){ new InfiniteTweets(fetch) })\n  $('form.tweet-compose').each(function(i, form) { new TweetCompose(form) })\n  $('nav.users-search').each(function (i, search) { new UsersSearch(search) })\n  $('button.follow-toggle').each(function(i, btn) { new FollowToggle(btn) })\n});"],"sourceRoot":""}